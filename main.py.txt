from kivy.app import app
from kivy.uix.widget import widget
from kivy.properties import (
     NumericPropperty, RefenceListPropety, ObjectPropety
)
from kivy.vector import Vector
from kivy.clock import Clock
from random import randint

class PongPaddle(Widget):
     score = NumericPropety(0)

def bounce_ball(self,ball):
    if self.collide_widget(ball):
       vx, vy = ball,velocity
    offset = (ball.center_y - self.center_y) / (self.height / 2)
    bounced = Vector(-1 * vx, vy)
     vel = bounced * 1.1

     ball.velocity = vel.x, vely + offset



class PongBall(Widget):

    velocity_x = NumericPropperty(0)
    velocity_y = NumericPropperty(0)

 velocity = RefenceListPropety(velocity_x,  velocity_y)


def move(self):
    self.pos = Vector(*self.velocity) + self.pos

class PongGame(widget):
    ball = ObjectPropety(None)
    player1 = ObjectPropety(None)
    player2 = ObjectPropety(None)

    def serve_ball(self, dt):
    self.ball.center = self.center
    self.ball.velocity = Vector(4, 0).rotate(randint(0, 360))

 def update(self):
     self.ball.move() #


     self. player1.bounce_ball(self.ball)
     self. player2.bounce_ball(self.ball)

    if(self.ball.y < 0) or (self.ball.top > self.height):
         self.ball.velocity_y *= -1


     if(self.ball.x < 0) or (self.ball.right > self.width):
         self.ball.velocity_x *= -1

   class PongApp(App):
       def build(self):
        game=PongGame()
        game.serve_ball()
        clock.shedule_intervalp(game.update, 1.0/60) # 60 FPS
        return game
        

if__name__== '__main__':
   PongApp().run()